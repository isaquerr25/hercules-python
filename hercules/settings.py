"""
Django settings for hercules project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import json
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load the config file
if os.environ.get("HERCULES_USE_ENV", "0") == "1":
    allowed_hosts = os.environ.get("DJANGO_ALLOWED_HOSTS", "").split(" ")

    server_host = os.environ.get("NGINX_SERVER_HOSTNAME")
    if server_host:
        allowed_hosts.append(server_host)

    cache = None
    if os.environ.get("DJANGO_CACHE", "default") == "redis":
        cache = {
            "BACKEND": "django.core.cache.backends.redis.RedisCache",
            "LOCATION": os.environ.get("DJANGO_CACHE_REDIS_URL"),
        }

    config = {
        "debug": os.environ.get("DJANGO_DEBUG", "0") == "1",
        "db": {
            "host": os.environ.get("POSTGRES_HOST", "localhost"),
            "port": os.environ.get("POSTGRES_PORT", 5432),
            "username": os.environ.get("POSTGRES_USER"),
            "password": os.environ.get("POSTGRES_PASSWORD"),
            "db-name": os.environ.get("POSTGRES_DB"),
        },
        "allowed-hosts": allowed_hosts,
        "secret-key": os.environ.get("DJANGO_SECRET_KEY"),
        "language-code": os.environ.get("DJANGO_LANGUAGE_CODE"),
        "time-zone": os.environ.get("TZ"),
        "secret-media-path": os.environ.get("NGINX_SECRET_MEDIA_PATH", "secret-files"),
        "cache": cache,
    }
else:
    with open(BASE_DIR / "config.json", "r") as f:
        config = json.load(f)

    cache = None
    if config.get("cache") is not None and config["cache"].get("use-redis", False):
        cache = {
            "BACKEND": "django.core.cache.backends.redis.RedisCache",
            "LOCATION": config["cache"].get("location"),
        }
    config["cache"] = cache


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config["secret-key"]

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config["debug"]

ALLOWED_HOSTS = config["allowed-hosts"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "hercules.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "hercules.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "HOST": config["db"]["host"],
        "PORT": config["db"]["port"],
        "NAME": config["db"]["db-name"],
        "USER": config["db"]["username"],
        "PASSWORD": config["db"]["password"],
    }
}


# Cache
# https://docs.djangoproject.com/en/4.2/ref/settings/#std-setting-CACHES
if config["cache"] is not None:
    CACHES = {"default": config["cache"]}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Logging
# https://docs.djangoproject.com/en/4.2/topics/logging/

if not DEBUG:
    LOGGING = {
        "version": 1,
        "disable_existing_loggers": False,
        "formatters": {
            "basic": {
                "format": "%(asctime)s.%(msecs)03d %(levelname)8s  %(name)s\n%(message)s",
                "datefmt": "%Y-%m-%d %H:%M:%S",
            },
            "access": {
                "format": "%(asctime)s %(message)s",
                "datefmt": "[%d/%b/%Y:%H:%M:%S %z]",
            },
        },
        "handlers": {
            "request": {
                "class": "logging.handlers.RotatingFileHandler",
                "filename": BASE_DIR / "logs" / "error.log",
                "maxBytes": 1024 * 1024 * 15,
                "backupCount": 10,
                "formatter": "basic",
            },
            "server": {
                "class": "logging.handlers.RotatingFileHandler",
                "filename": BASE_DIR / "logs" / "info.log",
                "maxBytes": 1024 * 1024 * 15,
                "backupCount": 10,
                "formatter": "access",
            },
        },
        "loggers": {
            "django.request": {
                "handlers": ["request"],
            },
            "django.server": {
                "handlers": ["server"],
            },
        },
    }

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = config["language-code"]

TIME_ZONE = config["time-zone"]

USE_I18N = True

USE_TZ = True


# Login URLs
# https://docs.djangoproject.com/en/4.2/ref/settings/#login-url

LOGIN_URL = f"/login"
LOGIN_REDIRECT_URL = f"/"


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = f"/static/"
STATIC_ROOT = BASE_DIR / "static"


# Media files
# https://docs.djangoproject.com/en/4.2/topics/files/

MEDIA_URL = f"/media/"
MEDIA_ROOT = BASE_DIR / "media"

# Uses nginx X-Accel-Redirect to an internal location
SECRET_MEDIA_PATH = f'/{config["secret-media-path"]}/'


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
